name: CI/CD for RestServer App

on:
  push:
    branches:
      - test

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Give executable permissions to gradlew
        run: chmod +x ./gradlew

      - name: Check Java version
        run: java -version

      - name: Clean the project
        run: ./gradlew clean

      - name: Build the project
        run: |
          export SPRING_PROFILES_ACTIVE=test
          ./gradlew build -x test

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image for multiple architectures
        run: |
          docker buildx create --use
          docker buildx build --no-cache --platform linux/arm/v7,linux/amd64  -t gery12492/rest-server:1.0.0 --push .

      - name: Confirm Docker image push
        run: docker images

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Deploy to Raspberry Pi
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no pi@pingnest.ddns.net << 'EOF'
          docker stop rest-server || true
          docker rm rest-server || true
          docker rmi gery12492/rest-server:1.0.0
          docker pull gery12492/rest-server:1.0.0
          docker run -d \
            -v /home/pi/config:/app/config/ \
            -v /mnt/hdd/messenger/images:/images/ \
            --name rest-server \
            -e SPRING_PROFILES_ACTIVE=test \
            -e SMTP_USERNAME=${SMTP_USERNAME} \
            -e SMTP_PASSWORD=${SMTP_PASSWORD} \
            -e SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME} \
            -e SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD} \
            -e SYSTEM_USER_EMAIL=${SYSTEM_USER_EMAIL} \
            -e SYSTEM_USER_PASSWORD=${SYSTEM_USER_PASSWORD} \
            -e SYSTEM_USER_DISPLAY_NAME=${SYSTEM_USER_DISPLAY_NAME} \
            -e SYSTEM_USER_UUID=${SYSTEM_USER_UUID} \
            -e SYSTEM_USER_TOKEN=${SYSTEM_USER_TOKEN} \
            -e ADMIN_USER_EMAIL=${ADMIN_USER_EMAIL} \
            -e ADMIN_USER_PASSWORD=${ADMIN_USER_PASSWORD} \
            -e ADMIN_USER_DISPLAY_NAME=${ADMIN_USER_DISPLAY_NAME} \
            -e ADMIN_USER_UUID=${ADMIN_USER_UUID} \
            -e ADMIN_USER_TOKEN=${ADMIN_USER_TOKEN} \
            --network my-network \
            -p 8080:8080 \
            gery12492/rest-server:1.0.0
          EOF
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          SYSTEM_USER_EMAIL: ${{ secrets.SYSTEM_USER_EMAIL }}
          SYSTEM_USER_PASSWORD: ${{ secrets.SYSTEM_USER_PASSWORD }}
          SYSTEM_USER_DISPLAY_NAME: ${{ secrets.SYSTEM_USER_DISPLAY_NAME }}
          SYSTEM_USER_UUID: ${{ secrets.SYSTEM_USER_UUID }}
          SYSTEM_USER_TOKEN: ${{ secrets.SYSTEM_USER_TOKEN }}
          ADMIN_USER_EMAIL: ${{ secrets.ADMIN_USER_EMAIL }}
          ADMIN_USER_PASSWORD: ${{ secrets.ADMIN_USER_PASSWORD }}
          ADMIN_USER_DISPLAY_NAME: ${{ secrets.ADMIN_USER_DISPLAY_NAME }}
          ADMIN_USER_UUID: ${{ secrets.ADMIN_USER_UUID }}
          ADMIN_USER_TOKEN: ${{ secrets.ADMIN_USER_TOKEN }}